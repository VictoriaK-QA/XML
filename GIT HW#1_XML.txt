GIT HW#1

XML
1. Создать внешний репозиторий c названием XML - GitHub + New repository
[X] Public
[X] Add a README file
Create repository

2. Клонировать репозиторий XML на локальный компьютер - git clone git@github.com:VictoriaK-QA/XML.git
3. Внутри локального XML создать файл “new.xml” - cd XML/      touch new.xml
4. Добавить файл под гит - git add .
5. Закоммитить файл - git commit -m "new file"
6. Отправить файл на внешний GitHub репозиторий - git push
7. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML - vim new.xml
Нажать i

<info>
 <name>Виктория</name>
 <age>28</age>
 <pet>1</pet>
 <salary>300</salary>
 </info>

Нажать Esc :wq Enter

8. Отправить изменения на внешний репозиторий - git commit -am "new file" 
git push
9. Создать файл preferences.xml - touch preferences.xml
10. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML - vim preferences.xml
Нажать i

<root>
 <favorite_movie>The Godfather</favorite_movie>
 <favorite_sitcom>Friends</favorite_sitcom>
 <favorite_food>pasta</favorite_food>
 <favorite_season>autumn</favorite_season>
 <country_to_travel>Italy</country_to_travel>
 </root>

Нажать Esc :wq Enter

11. Создать файл skills.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML - touch skills.xml 
vim skills.xml 
Нажать i

<root>
 <skills>Testing Theory</skills>
 <skills>Client server</skills>
 <skills>SQL</skills>
 <skills>Postman</skills>
 <skills>Charles Fiddler Sniffing</skills>
 <skills>Web Services</skills>
 <skills>Git Linux Terminal</skills>
 <skills>DevTools</skills>
 <skills>Mobile Testing</skills>
 <skills>Web Testing</skills>
 <skills>Load testing</skills>
 </root> 

Нажать Esc :wq Enter

12. Сделать коммит в одну строку - git commit -am "info about skills and preferences"
13. Отправить сразу 2 файла на внешний репозиторий - git push
14. На веб интерфейсе создать файл bug_report.xml - Нажать Add file + Create new file Имя файла bug_report.xml
15. Сделать Commit changes (сохранить) изменения на веб интерфейсе - Нажать Commit new file
16. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML - Нажать Edit this file

<root>
 <ID>BR-14</ID>
 <Title>What?Where?When?</Title>
 <Severity>Minor</Severity>
 <Priority>Medium</Priority>
 <Precondition>Preparation steps</Precondition>
 <Environment>Devices</Environment>
 <STR>Steps to restore</STR>
 <ER>Expected result</ER>
 <AR>Actual Result</AR>
 <Attachment>link</Attachment>
 </root>

17. Сделать Commit changes (сохранить) изменения на веб интерфейсе - Нажать Commit changes
18. Синхронизировать внешний и локальный репозиторий XML - git pull